parameters:
    locale: 'en'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{Entity,Migrations,Tests,Kernel.php}'

    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']


    App\Doctrine\Repository\PokemonRepository:
        factory: ["@doctrine.orm.entity_manager", getRepository]
        arguments:
            - App\Entity\Pokemon

    App\Repository\PokemonRepositoryInterface:
        alias: App\Doctrine\Repository\PokemonRepository

    App\Validator\RequestValidator:
        arguments:
            - '@validator'

    App\Service\PokemonService:
        arguments:
            - '@App\Repository\PokemonRepositoryInterface'
            - '@App\Validator\RequestValidator'

    App\Service\PokemonImageService:
        arguments:
            - '@App\Repository\PokemonRepositoryInterface'
            - '@App\Validator\RequestValidator'


    # Serializer
    Symfony\Component\Serializer\Encoder\JsonEncoder:

    App\Serializer\Normalizer\PokemonNormalizer:
        arguments:
            - '@request_stack'

    Symfony\Component\Serializer\Serializer:
                arguments:
                    0:
                        - '@App\Serializer\Normalizer\PokemonNormalizer'
                    1:
                        - '@Symfony\Component\Serializer\Encoder\JsonEncoder'



